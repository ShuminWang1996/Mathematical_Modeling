%画出机器人的障碍环境，并标注start,goal位置
% a = rand(20)>0.35;%黑白格所占比例
clear all
a = load('test2.txt');
% a = load('environment.txt');%blacb--barrier occputy 35%.
% a = rand(20)>0.3;
% a = load('environment6060.mat', 'k');
% a = a.k;
n = size(a,1);
b = a;
b(end+1,end+1) = 0;
figure;
colormap([0 0 1;1 1 1])
pcolor(b); % 赋予栅格颜色
set(gca,'XTick',10:10:n,'YTick',10:10:n);  % 设置坐标
axis image xy
displayNum(n);%显示栅格中的数值
text(1,n+1.5,'START','Color','red','FontSize',10);%显示start字符
text(n+1,1.5,'GOAL','Color','red','FontSize',10);%显示goal字符
hold on
%pin strat goal positon
% scatter(1+0.5,n+0.5,'MarkerEdgeColor',[1 0 0],'MarkerFaceColor',[1 0 0], 'LineWidth',1);%start point
% scatter(n+0.5,1+0.5,'MarkerEdgeColor',[0 1 0],'MarkerFaceColor',[0 1 0],
% 'LineWidth',1);%goal point00
hold on
%障碍空间矩阵集合B 
Barrier = (find(a==0))';
A=1:1:n*n;
B=setdiff(A,Barrier);
c=25;
rightInf = sqrt(2);
DistMin = sqrt((1-n)^2+(n-1)^2);
start=1;
goal=100;
arrayValue = [1];
for i=1:n*n
    if ~ismember(i,Barrier)
       for j=1:n*n
           if ~ismember(j,Barrier)
               d=distance(n,i,j);
               if d<=rightInf &&d>0
                   map(i,j)=c;
               else
                   map(i,j)=0;
               end
           else
               map(i,j)=0;
           end
       end
    else
        map(i,:)=0;
    end
end
mm=3;
for u=1:mm
for s=1:n
MAXGEN=200;
try_num=10;
point=start;
Dist=inf;
for m=1:MAXGEN
    [w,d,allow_area]=next_point(n,point,B,rightInf,goal,DistMin);
    p=pp(w,d,allow_area,map,point);
    for j=1:try_num
        nextpoint=randsrc(1,1,[allow_area,p]);  
        if distance(n,point,goal)>distance(n,nextpoint,goal) && ~ismember(nextpoint,arrayValue)
            point=nextpoint;
            arrayValue=[arrayValue nextpoint];
            break
        end
%         point=next_point;
    end
    if point==goal
        break
    end
end
if m<MAXGEN
  
   d=0;
   for i=1:length(arrayValue)-1
       d=d+distance(n,arrayValue(i),arrayValue(i+1));
   end
   d=d+distance(n,arrayValue(length(arrayValue)),arrayValue(1));
   if d<Dist
       Dist=d;
       best_path=arrayValue;
   end
   DrawPath(n,best_path);
else
    disp("没有找到路径")
end
end
for i=1:length(best_path)-1
    map(best_path(i),best_path(i+1))=map(best_path(i),best_path(i+1))+2.5;
end
map(best_path(length(best_path)),best_path(1))=map(best_path(length(best_path)),best_path(1))+2.5;
end
